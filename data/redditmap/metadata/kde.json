{"time_collected":"2023-03-08 12:45:41.731928-05:00","top_headers":[{"heading":"Not sure what to speak about at #Akademy2023? No need to be anxious, we have a guideline article to get you started.","time_posted":"23 days ago"},{"heading":"Sign up for Google Summer of Code 2023 with KDE! Behind the link are some projects we thought would be fun, but you can also reach out to our mentors and discuss your own ideas.","time_posted":"13 days ago"},{"heading":"The KDE PIM team has been working hard over the past two months on their latest developments, including the highly anticipated return of Google contacts and calendar access. To learn more, check out their latest update.","time_posted":"7 hours ago"},{"heading":"To be klear, I'm a huge KDE fan and have got it installed on two of my Komputers.","time_posted":"14 hours ago"},{"heading":"Whats your favorite workflow in KDE?","time_posted":"5 hours ago"},{"heading":"Any ideas on how to get the special characters on Y, X and C to work using the Fn key like itâ€™s working on Windows? Nothing happens with this combination on both of my KDE setups (SteamOS and EndeavourOS)","time_posted":"4 hours ago"}],"rules":["Respect the KDE Code of Conduct","No duplicates","No spam","No blog spam","No screenshot of your desktop, use the Monthly Screenshot Thread instead","No comparison between desktop environments and/or distros","No misinformation"],"subreddits":{"Distros":{"r/Kubuntu":"10,010 members","r/kdeneon":"5,663 members","r/openSUSE":"25,035 members","r/FerenOS":"513 members","r/Mageia":"516 members"}},"about":{"header":"About Community","description":"KDE is an international and diverse technology team creating user-friendly free and open source software for desktop and portable computing. KDE's software runs on GNU/Linux, BSD and other operating systems, including Windows.","created":"Created Jan 25, 2008","stats":["97.5k Members","395 Online"]},"other_information":[{"header":"User Flairs","description":"To change your user flairs, click on Community Options on the About Community sidebar. You can choose between 62 flairs showcasing your system.\nTo get a KDE Contributor flair that discloses your involvement within the KDE community, send a message to the mods. You can choose between 12 flairs with different icons showcasing your favorite project or distro.\nClick here for more information about flairs.\nThe contributor flairs available are shown below:"},{"header":"Want to contribute to KDE?","description":"For starters:\nThe best way to start contributing is to contact the community over Matrix, Telegram, IRC\nAt first sight, it might seem a bit hard to interact in those groups. That's okay! Join them first, see how things are done, mention your interest and where you'd like to work with. We may even find a mentor for you!\nThe KDE Community develops and distributes open source software. As such, we follow a sort of do-ocracy wherein tasks are done and assigned by contributors themselves. Feel free to pick an area and just start contributing immediately! We're always here to help you along the way. A good way to contribute with code for the first time is to fix an unfixed bug that afflicts you or assign yourself to junior jobs and start working on them.\nIt's always nice to collaborate optimally with others in any given setting, but this is especially important for community projects like those following the open source model, so remember to read the KDE Code of Conduct.\nHere are a few links to help you in your first contributions to KDE:\nGet Involved\nYour first commit\nWrite code\nReport issues\nTriage bug reports\nDebug KDE software\nTranslate software and documentation\nDesign applications and icons\nWrite documentation\nManage websites and backends\nSupport other users\nPromote KDE\nMake KDE software more accessible\nAssist with management and organization\nUpdate the wikis\nVideo tutorials for setting up your KDE development environment:\nSetting up kdesrc-build, by veggero\nSetting up kdesrc-build with QtCreator, by nmariusp\nBuilding KF5 and KF6 with kdesrc-build, by nmariusp\nCompile KDE Plasma - Easier than I thought, by Leszek\nPlasma upgrade with kdesrc-build, by Leszek\nGet started learning QML/QtQuick:\nQML is a JS-like declarative language that can be executed at runtime and is used in Plasma widgets for instance. It is also used in conjunction to C++ to create user interfaces easily. It is part of QtQuick and it's suitable for both desktop and mobile applications. KDE's convergent framework, Kirigami, part of KDE Frameworks, is built on top of QML/QtQuick. Mauikit is built on top of Kirigami. If you're used to languages like JavaScript, Python or CSS, you might want to try QML/QtQuick/Kirigami.\nThe new intro to Kirigami\nThe new intro to Plasma Widgets in QML\nThe new intro to Plasma Widgets with C++\nThe original Plasma Developer Guide\nTest QML code live\nCardaques' qmlbook for Qt5\nTQC's new QML6 book based on qmlbook\nThe official KDAB YouTube course on QML\nThe official Qt documentation on QML\nGet started learning C++/QtWidgets:\nC++ is a C-like compiled language that follows object-oriented programming. It is used for QtWidgets projects whose main goal are desktop applications, but it can serve as the backend in QML/QtQuick projects. KDE's QtWidgets-based framework, KXmlGui, can also be used to create projects with C++ and QML/QtQuick with the help of KDeclarative and Kirigami. If you're used to languages like C, C#, Java and Rust, you might want to try C++/QtWidgets/KXmlGui.\nThe new KDE intro to C++\nAn app to more easily create apps with a template, KAppTemplate\nA brief tour by the creator of C++\nThe community-made programmers' reference on C++\nThe W3Schools documentation\nThe freemium Codecademy course\nComprehensive wikibook for C++\nThe Wikiversity C++ course\nThe LearnCPP tutorial website\nThe CPlusPlus tutorial website\nVoidRealm's YouTube course on C++\nVoidRealm's YouTube course on C++ Qt programmnig\nVoidRealm's YouTube course on migrating to and coding in Qt6\nMOOCs\nThe free edX course on C++ by New York University\nThe free Coursera course on C++ by University of Illinois\nThe non-video-based integrated Qt course by University of Helsinki\nAnd other languages too!\nPySide includes Qt-endorsed bindings for Python to develop Qt apps.\nPyQt includes Riverbank-endorsed bindings for Python to develop Qt apps.\nRust-Qt or Ritual includes bindings for Rust to use C++, and thus also Qt.\nQMetaObject-rs includes bindings for Rust to use QML, and thus also QtQuick.\nRust-Qt-Binding-Generator is a code generator developed by KDE to use Rust code from Qt and QML.\nKDE Rust wiki includes KDE projects using Rust as well as notes and resources to learn\nQtJambi includes bindings for Java to develop Qt apps.\nQt for Go includes bindings for Golang to develop Qt apps.\nNodeGui includes bindings for NodeJS to develop Qt apps.\nFull list of language bindings for Qt"},{"header":"Are you on NVIDIA?","description":"If you're experiencing issues with NVIDIA on Plasma, try the following:\nIf experiencing screen tearing, set ForceCompositionPipeline\nIf experiencing performance issues, set XRender as render backend\nIf you want to try the Wayland session, follow these instructions."},{"header":"Want to test Plasma Wayland?","description":"There are a few things to take note:\nHere is a list of Wayland showstoppers to keep track of\nHere are three lists of Wayland software: awesome-wayland, arewewaylandyet, sway addons (some might work on Plasma)\nUse OBS Studio or Kooha to record the desktop, ensure you're using at least pipewire 0.3, have xdg-desktop-portal-kde installed, and check if the systemd services pipewire and pipewire-media-session or wireplumber are running.\nIf OBS doesn't work well for you, you can still record the screen with ffmpeg's kmsgrab as a last resource: sudo ffmpeg -device /dev/dri/card0 -f kmsgrab -i - -filter:v 'hwmap=derive_device=vaapi,scale_vaapi=w=1920:h=1080:format=nv12' -codec:v h264_vaapi recording.mkv\nThere's basic graphics tablet support via libinput and a KCM starting with Plasma 5.24\nIf you want to test the most up-to-date Plasma Wayland and help us improve it, two convenient solutions are KDE neon and openSUSE Argon/Krypton\nIf you are testing the Plasma Wayland session and have an NVIDIA card, the process for that is a bit different\nKWin Wayland crashes require a few additional steps to report\nIf you are testing the Plasma Wayland session and have an Intel/AMD card, note the following environment variables:\n=> Globally, you can tell Qt apps to run on Wayland and only XWayland if not possible\nQT_QPA_PLATFORM=\"wayland,xcb\"\n=> To force a Qt/KDE application to run on XWayland if you experience issues, run\nQT_QPA_PLATFORM=xcb\n=> Electron apps can be run natively on Wayland with:\n--enable-features=UseOzonePlatform --ozone-platform=wayland.\n=> If you have trouble running SDL games on Wayland, force them to run on XWayland with:\nSDL_VIDEODRIVER=x11\n=> You can set environment variables for each Steam game with Launch Options like so:\nYOUR_ENV_VAR_HERE %command% --your-flag-here\n=> Some game engines have experimental Wayland support, like Unity, which has\n%command% -force-wayland\n=> If window management for games is wonky, toggling fullscreen or maximized state should resize window properly to the screen. If e.g. some Unity games render a black screen, start them with fullscreen disabled\n%command% -screen-fullscreen 0"},{"header":"General FAQ","description":"I'm confused. Where do I report issues? Phabricator, Invent, Bugzilla?\nCurrently, only Bugzilla. It's easier than you might think, for instance, filing a bug to Dolphin: Visit website > Create account > File a bug > Dolphin > General. Don't worry that much about where your bug report should go: bug triagers will move it to the correct place. :)\nWhat about widgets? They don't look like standalone programs and I don't know their name!\nDefault widgets should be reported under the product Plasmashell. Third-party widgets should be reported to their respective devs.\nI have no idea how to report crashes!\nSee how to create useful crash reports, how to debug Plasmashell and widgets, and how to debug KWin. You will need to install debug symbols, depending on your distro you might already have them enabled (e.g. openSUSE), you might have to perform additional steps to enable them (e.g. Kubuntu). After that, creating a full backtrace is just a matter of attaching GDB to a process and waiting for it to crash:\ngdb -pid $(pidof NAMEOFPROCESS) -batch -ex \"set logging file APPLICATIONNAME.txt\" -ex \"set logging on\" -ex \"continue\" -ex \"thread apply all backtrace\" -ex \"quit\"\nWhere can I contribute with patches?\nAfter the move to Gitlab, we stopped using Phabricator for sending patches entirely. The cgit web interface was also removed. The Github repository is simply a mirror of our git repositories. Please send patches over Invent.\nI can't run Dolphin as root!\nWait for privilege escalation via PolicyKit in KIO to land soonâ„¢. Otherwise, use openSUSE's hack: dbus-launch dolphin -qwindowtitle \"%c\" \"%u\" in your launcher.\nAfter removing the menu and adding it again, I can no longer open it with the Meta/Super/Windows key.\nRight click the menu and configure its keyboard shortcut to Alt+F1.\nI'm experiencing issues with baloo.\nBaloo is the backend used for searches, tags and other Plasma integration features. If you're experiencing issues, please report them over bugs.kde.org before attempting a workaround or disabling it. See the baloo wiki page before testing and reporting issues.\nI can't open the menu after installing Latte Dock/after going back to using Plasma panels!\nHere's how to fix it.\nDolphin looks weird in GNOME or through ssh X forwarding/waypipe!\nTo make Dolphin look good in GNOME, use QGnomePlatform. If unavailable in your distro, install qt5ct and set QT_QPA_PLATFORMTHEME=qt5ct.\nTo make Dolphin look good with ssh X forwarding or Waypipe on a Plasma session, you need to set DESKTOP_SESSION=kde. If you don't want to add this to your ssh command every time, set it in ~/.ssh/environment.\nAfter updating my Plasma from git installation (KDE neon Unstable/openSUSE Krypton/Arch KDE Unstable) my system has suddenly gotten several issues despite new users not suffering from them!\nTry deleting ~/.cache after a problematic update, and especially before bugtesting. Typically cache gets invalidated/cleaned whenever a new application version is installed, but in systems with daily builds such versions often do not change, as they're different builds of the same version. This might lead to unexpected bugs that are not generally reproducible.\nSettings are spread all over my config folder, it's annoying!\nIf it bothers you so much, configure all KDE applications with XDG_CONFIG_HOME=~/.config/KDE, this should force your applications to use that folder instead of ~/.config. Do not set this globally!\nI have some other questions!\nPlease see https://userbase.kde.org/Plasma/Tips and https://wiki.archlinux.org/index.php/KDE#Troubleshooting , or join a local Matrix, Telegram or IRC support group."}]}